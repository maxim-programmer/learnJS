			Логические операторы
	|| (ИЛИ)
 Оператор "ИЛИ" выглядит как двойной символ вертикальной черты.
 При булевых значениях результат операций всегда равен true, за исключением 
случая, когда оба аргумента false.
 Если значение не логического типа, то оно к нему приводится в целях 
вычислений.
 Обычно оператор || используется в if для проверки истинности любого из 
заданных условий.
 Цепочка ИЛИ || возвращает первое истинное значение или последнее, если 
такое значение не найдено. Значение возвращается в исходном виде, без 
преобразования.
 Применение цепочки ИЛИ:
1) Получение первого истинного значения из списка переменных или выражений.
2) Сокращённое вычисление. Это означает, что ИЛИ || обрабатывает свои 
операнды до тех пор, пока не будет достигнуто первое истинностное значение, 
и затем это значение сразу же возвращается, даже не затрагивая другие операнды.
Иногда люди используют эту возможность для выполнения инструкций только в 
том случае, если условие в левой части является ложным.

	||= (Логическое присваивание ИЛИ)
 a ||= b;
 Оператор ||= принимает два операнда и выполняет следующие действия:
1) Вычисляет операнды слева направо.
2) Конвертирует a в логическое значение.
3) Если a ложно, присваивает a значение b.
 Оператор логического присваивания ИЛИ ||= – это «синтаксический сахар», 
добавленный в язык в качестве более короткого варианта записи if-выражений 
с присваиванием.

	&& (И)
 В традиционном программировании И возвращает true, если оба аргумента 
истинны, а иначе - false. Как и в случае с ИЛИ, любое значение допускается 
в качестве операнда И.
 При цепочке И && выполняются следующие действия:
1) Вычисляет операнды слева направо.
2) Каждый операнд преобразует в логическое значение. Если результат false, 
останавливается и возвращает исходное значение этого операнда.
3) Если все операнды были истинными, возвращается последний.
 Другими словами, И возвращает первое ложное значение. Или последнее, если 
ничего не найдено.
 Приоритет оператора && больше, чем у ||, так что он выполняется раньше.
 ВАЖНО: используйте каждую конструкцию по назначению. Использовать if, если 
нам нужно if, и использовать &&, если нам нужно И.

	&&= (Логическое присваивание И)
 a &&= b
 &&= присвоит a значение b только в том случае, если a истинно.
 Это тоже "синтаксический сахар" и мы можем написать это с помощью if.

	! (НЕ)
 Оператор НЕ представлен восклицательным знаком!
 Оператор принимает один аргумент и выполняет следующие действия:
1) Сначала приводит аргумент к логическому типу true/false.
2) Затем возвращает противоположное значение.
 В частности, двойное НЕ !! используют для преобразования значений к 
логическому типу. Также можно сделать с помощью встроенной функции Boolean.
 Приоритет НЕ ! всегда является наивысшим из всех логических операторов, 
поэтому он всегда выполняется первым, перед && или ||. 
