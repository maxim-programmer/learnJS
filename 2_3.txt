 Так было до 2009 года, когда появился ECMAScript 5 (ES5). Он добавил новые 
возможности в язык и изменил некоторые из существующих. Чтобы устаревший код 
работал, как и раньше, по умолчанию подобные изменения не применяются. 
Поэтому нам нужно явно их активировать с помощью специальной директивы: 
"use strict".
 Директива выглядит как строка: "use strict" или 'use strict'. Когда она 
находится в начале скрипта, весь сценарий работает в «современном» режиме.
 В начале большинства видов функций можно поставить "use strict". Это 
позволяет включить строгий режим только в конкретной функции. Но обычно люди 
используют его для всего файла.
 Как только мы входим в строгий режим, отменить это невозможно.
 Включение в консоли браузера:
1 'use strict'; <Shift+Enter для перехода на новую строку>
2 // ...ваш код...
3 <Enter для запуска>
 Если не работает, например, в старом браузере:
1 (function() {
2   'use strict';
3   
4   // ...ваш код...
5 })()
 Современный JavaScript поддерживает «классы» и «модули» — продвинутые 
структуры языка (и мы, конечно, до них доберёмся), которые автоматически 
включают строгий режим. Поэтому в них нет нужды добавлять директиву 
"use strict".
 Подытожим: пока очень желательно добавлять "use strict"; в начале ваших 
скриптов. Позже, когда весь ваш код будет состоять из классов и модулей, 
директиву можно будет опускать.
